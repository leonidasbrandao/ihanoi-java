# iHanoi - Interactive/Internet Tangram: http://www.matematica.br/ihanoi
# 
# Free interactive solutions to teach and learn
# Tem alguma contribuicao desenvolvida sobre o projeto iHanoi?
# Se tiver interesse em compartilha-la, por favor, mande-nos com alguma explicacao!
# 
# iMath Project: http://www.matematica.br
# LInE           http://line.ime.usp.br
# LInE : "L"aboratory of "I"nformatics i"n" "E"ducation : http://line.ime.usp ; http://www.usp.br/line
#
# @author Leo^nidas de Oliveira Branda~o
# 
# This is an interactive game simulating the legend of Towers of Hanoi.
# The iHanoi is implemented in Java and allows to register the moviments performed by the learner.
# 
# @see ihanoi/iHanoi.java : main class
# @see ihanoi/iHanoiPanel.java : main Panel with all the graphical
# @see ihanoi/TowersPanel.java : a central Panel with the towers and the discs
# 
# @version
#  2016/08/01 : new version with register and load movements as a file.
# 
# @credits
# This source is free and provided by iMath Project (University of Sao Paulo - Brazil). In order to contribute, please
# contact the iMath coordinator Leo^nidas de Oliveira Branda~o.
#
# O codigo fonte deste programa e' livre e desenvolvido pelo projeto iMatica (Universidade de Sao Paulo). Para contribuir,
# por favor contate o coordenador do projeto iMatica, professor Leo^nidas de Oliveira Branda~o.


# Title
# Used with 'ResourceReader.read("msg"))'
ihanoi    = iHanói: http://www.matematica.br
torres    = Torres de Hanói - http://www.matematica.br - LOB (IME - USP)
resumo    = Torres de Hanói - Leônidas de O. Brandão (IME - USP) - http://www.matematica.br
torresTit = Torres de Hanói
torresEnd = iMática - http://www.matematica.br
verao     = [Versao: $N$]

# Sobre
sobre[0]  = \         .: iMática: Matemática Interativa na Internet :. 
sobre[1]  = \                   Problema das Torres de Hanói
sobre[2]  = \  O problema das Torres de Hanói foi inicialmente proposta pelo matemático
sobre[3]  = francês Edouard Lucas, em 1883. Lucas elaborou para seu \"jogo\" uma lenda
sobre[4]  = curiosa sobre uma torre muito grande, a \"Torre de Brama\", que foi criada no
sobre[5]  = \"início dos tempos\", com três hastes contendo 64 discos concêntricos.
sobre[6]  = \  O \"criador\" do universo também teria criado uma comunidade de monges cuja única
sobre[7]  = atividade seria mover os discos da haste original (\"A\") para uma de destino (\"C\").
sobre[8]  = \  O \"criador\" teria estabelecido que o mundo acabaria quando os monges terminassem sua
sobre[9]  = tarefa. Porém, os monges deveriam respeitar três regras na sua execução da tarefa:
sobre[10] = \    1. nunca um disco maior pode ser colocado sobre um disco menor;
sobre[11] = \    2. pode-se mover um único disco por vez;
sobre[12] = \    3. nunca um disco pode ser depositado noutro lugar que não em uma das três hastes.
sobre[13] = \  Assim, o desafio inicial deste jogo é que você procure encontrar a regra de movimentação
sobre[14] = ótima: que atinja o objetivo e que o faca com o menor número possível de movimentos.
sobre[15] = Com isso poderá estimar quanto tempo ainda nos \"resta\" (segundo a lenda!!).
sobre[16] = \  Para atingir o segundo objetivo do jogo (estimar o tempo restante), suponha que cada
sobre[17] = disco leve 1 segundo para ser movido. Tente encontrar uma fórmula que, dado \"n\" devolva
sobre[18] = o número mínimo de movimentos para \"n\" discos.;

autor     = \         Leônidas de Oliveira Brandão - http://www.ime.usp.br/~leo
imatica   = \         iMática - http://www.matematica.br
LInE      = \         LInE - http://line.ime.usp.br


# Panel
iHanoiVersao        = Versão
de                  = De
para                = Para
numMov              = Número de movimentos
fim                 = Fim
atualiza            = Atualiza
sobre               = Sobre
rever               = Rever
desfaz              = Desfaz
automatico          = Automático
read                = Leia
write               = Grave

# iHanoi

cfgSelecioneNum     = Selecione número de discos
moveMsgInicial      = Clique nas bases das hastes para mover discos (A,B ou C), primeira é origem

movePara            = Já escolhida haste de onde sairá disco do topo, escolha haste destino
moveDe              = Escolhida nova haste que terá disco do topo removido

moveAutoVazia       = Não existe mais disco na haste de origem
moveHasteVazia      = Não há disco nesta haste, por favor, escolha outra
moveMesmaHaste      = Foi escolhida a haste de destino igual a de origem, por favor, escolha outra

moveErrDesfazVazio  = Não existe movimento a ser desfeito!

# Mensagens
msgFim              = Este botão finaliza o iHanói
msgAtualiza         = Este botão reinicia o jogo, voltando todos os discos para haste A
msgSobre            = Este botão mostra algumas informações sobre o iHanói e a "lendas das Torres de Hanói"
msgRever            = Este botão permite rever todos os movimentos utilizados (só habilitado após atingir meta)
msgDesfaz           = Este botão permite desfazer o última movimentação de disco
msgAutom            = Este botão realiza automaticamente a movimentação mínima
msgRead             = Este botão abre um novo arquivo iHanói
msgWrite            = Este botão permite gravar os atuais movimentos como um arquivo iHanói
msgHastes           = Clique na base das hastes para mover o disco do topo ou para mover um disco para seu topo
msgMain             = Chamada: java ihanoi.iHanoi n=N lang=LN (N inteiro, LN=pt => Português ou LN=en => Inglês)

#
movTitulo           = Movimentos realizados
movSubTitulo        = (N. X -> Y :: movimento N: mover disco no topo da hasta X para o topo da Y)
movMovimentos       = Total de movimentos realizados:
movVersao           = Versão: 

# ihanoi/TowersPanel.java: Final and errors
moveMaiorSobreMenor = Lamento, tentando colocar disco maior sobre menor
moveFimParabensMas  = Parabéns! Conseguiu mover os $N$ discos com o mínimo ($N$), mas a haste destino é a C
moveFimExcessoMas   = Usou $N$ movimentos, mas poderia ter usado menos! E atenção, a haste destino é a C
moveFimParabens     = Parabéns!! Conseguiu mover os $N$ discos com o mínimo de movimentos ($N$)
moveFimExcesso      = Usou $N$ movimentos para mover os $N$ discos, mas poderia ter usado menos 
tpErrNotiHanoi      = O conteúdo do arquino não parece ser um arquivo do iHanoi!
tpiHanoiRead        = O conteúdo do arquino iHanói foi corretamente interpretado!

# ihanoi/WindowFileExists.java
wfeFileExists       = Arquivo existente
wfeFileName         = Nome do arquivo
wfeCancel           = Cancelar

# ihanoi/WindowFileDialog.java
wfdMsgOpen          = Abrir arquivo...

# ihanoi/iHanoiPanel.java
ihpErrNoMovements    = Erro: não existem movimentos de discos a serem registrados!
ihpErrEmptyTower     = Movimento inválido, a haste de origem não contém discos!
ihpErrSameTower      = Movimento inválido, as haste de origem e de destino não podem ser a mesma!
ihpErrGreaterOver    = Movimento inválido, um disco maior não pode ser colocado sobre um menor!

# ihanoi/ProcessReadWrite.java
iuRWerr_readFile     = Erro na leitura do arquivo!
iuMsgRWwaitReading   = Por favor, aguarde a leitura do arquivo...
iuMsgRWrecAs         = Gravar como...
iuMsgRWrecCanceled   = A gravação do arquivo foi cancelada!
iuMsgRWfileExists    = O arquivo já existe, escreve sobre o mesmo?
iuMsgRWregistering   = Gravando o arquivo
iuMsgRWcanceld       = Cancelada a gravação!
iuRWerr_notihanoi    = O conteúdo do arquivo não parece ter sido gerado pelo iHanoi!
iuMsg_successReadFile = Arquivo foi lido com sucesso!